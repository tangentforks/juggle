# $Id: Makefile.in,v 1.1.1.1 2001/01/27 23:32:40 neitzel Exp $

# -----------------------------------------------------------------------------
#  Makefile for ups test programs - see also Makefile2
# -----------------------------------------------------------------------------

SHELL		= /bin/sh
@SET_MAKE@

srcdir		= @srcdir@
topdir		= @top_srcdir@
VPATH		= @srcdir@
S		= ${srcdir}/

CC		= @CC@

# The directory where X include files live.
X11_INC		= @X_CFLAGS@

# X libraries
X11_LIB		= @X_LIBS@  @X_PRE_LIBS@  -lX11  @X_EXTRA_LIBS@

CPPFLAGS	= @CPPFLAGS@  @DEFS@  -I.  -I..  ${X11_INC}
CFLAGS		= @CFLAGS@  ${CPPFLAGS}
LDFLAGS		= @LDFLAGS@  ${X11_LIB}  @LIBS@
LIBS		= @LIBS@

SHOWDEFS	= -dM

# -----------------------------------------------------------------------------

BINARIES	= datatype   interp_stop   reg_test   reg_ll   register \
		  assertion   coredump   enums   recurse   sleepfor
SRC		= datatype.c interp_stop.c reg_test.c reg_ll.c register.c \
		  assertion.c coredump.c enums.c recurse.c sleepfor.c
HDRS		=

UPS_CFLAGS	= ${CFLAGS} ${UPS_HEADERS} ${ARCH_CFLAGS} ${MORE_CFLAGS}
CCLINE		= ${CC}  -c ${UPS_CFLAGS}   $S
LINKCC		= ${CC}
LINKFLAGS	= ${LDFLAGS} ${X11_LIB} ${LIBS}
LINKCFLAGS	= ${UPS_CFLAGS}

ALL_SRC		= ${CSRC} ${HDRS}
FILES		= *.c *.cc *.f *.h Makefile.in Makefile2.in README dynamic_libs.txt

# -----------------------------------------------------------------------------

default_target:
	@echo
	@echo 'Targets are :-'
	@echo
	@echo '    c        -  C test programs'
	@echo '    cxx      -  C++ test programs'
	@echo '    fortran  -  Fortran test programs'
	@echo

all: c cxx fortran

testprogs: c

c: ${BINARIES}

# -----------------------------------------------------------------------------
# The C++ and Fortran tests are in Makefile2 generated by another 'configure'.
# This is so that problems with C++ and Fortran specific stuff in the script
# do not stop the building of UPS.

cxx: Makefile2
	${MAKE} -f Makefile2 ${MFLAGS} $@

fortran: Makefile2
	${MAKE} -f Makefile2 ${MFLAGS} $@

Makefile2:
	${S}configure

# -----------------------------------------------------------------------------

assertion.o: assertion.c
	${CCLINE}assertion.c

assertion: assertion.o
	${LINKCC} ${LINKCFLAGS} -o $@ assertion.o

coredump.o: coredump.c
	${CCLINE}coredump.c

coredump: coredump.o
	${LINKCC} ${LINKCFLAGS} -o $@ coredump.o

datatype.o: datatype.c
	${CCLINE}datatype.c

datatype: datatype.o
	${LINKCC} ${LINKCFLAGS} -o $@ datatype.o

enums.o: enums.c
	${CCLINE}enums.c

enums: enums.o
	${LINKCC} ${LINKCFLAGS} -o $@ enums.o

interp_stop.o: interp_stop.c
	${CCLINE}interp_stop.c

interp_stop: interp_stop.o
	${LINKCC} ${LINKCFLAGS} -o $@ interp_stop.o

register.o: register.c
	${CCLINE}register.c

register: register.o
	${LINKCC} ${LINKCFLAGS} -o $@ register.o

reg_ll.o: reg_ll.c
	${CCLINE}reg_ll.c

reg_ll: reg_ll.o
	${LINKCC} ${LINKCFLAGS} -o $@ reg_ll.o

reg_test.o: reg_test.c
	${CCLINE}reg_test.c

reg_test: reg_test.o
	${LINKCC} ${LINKCFLAGS} -o $@ reg_test.o

recurse.o: recurse.c
	${CCLINE}recurse.c

recurse: recurse.o
	${LINKCC} ${LINKCFLAGS} -o $@ recurse.o

sleepfor.o: sleepfor.c
	${CCLINE}sleepfor.c

sleepfor: sleepfor.o
	${LINKCC} ${LINKCFLAGS} -o $@ sleepfor.o

# -----------------------------------------------------------------------------

showdefs:
	@echo > _sd.c
	@echo
	@echo 'The pre-processor and compiler have defined...'
	@echo
	${CC}  -E  ${SHOWDEFS}  ${UPS_CFLAGS} _sd.c
	@echo
	@rm -f _sd.c

list:
	@echo ${FILES} | tr ' ' '\012'

clean:
	rm -f ${CBINARIES} *.o *.core core
	if test -f Makefile2; then \
		${MAKE} -f Makefile2 ${MFLAGS} $@ ; \
	fi

# -----------------------------------------------------------------------------
#  Header dependenices
# -----------------------------------------------------------------------------
# .o header dependencies, generated by make deps
