
static bmcursor_t Cursortab[] = {
#define CU_DEAD		0
	{ wn_make_x11_bmc_cursor(cu_dead, cu_dead_mask) },

#define CU_DISPLAY	1
	{ wn_make_x11_bmc_cursor(cu_display, cu_display_mask) },

#define CU_DRAG_BOX	2
	{ wn_make_x11_bmc_cursor(cu_drag_box, cu_drag_box_mask) },

#define CU_MENU		3
	{ wn_make_x11_bmc_cursor(cu_menu, cu_menu_mask) },

#define CU_SBAR		4
	{ wn_make_x11_bmc_cursor(cu_sbar, cu_sbar_mask) },

#define CU_SC_PRESSED	5
	{ wn_make_x11_bmc_cursor(cu_sc_pressed, cu_sc_pressed_mask) },

#define CU_SCROLL_DOWN	6
	{ wn_make_x11_bmc_cursor(cu_scroll_down, cu_scroll_down_mask) },

#define CU_SCROLL_UP	7
	{ wn_make_x11_bmc_cursor(cu_scroll_up, cu_scroll_up_mask) },

#define CU_WAIT		8
	{ wn_make_x11_bmc_cursor(cu_wait, cu_wait_mask) },

#define CU_LINE		9
	{ wn_make_x11_bmc_cursor(cu_line, cu_line_mask) },

#define CU_DRAGBOX	10
	{ wn_make_x11_bmc_cursor(cu_dragbox, cu_dragbox_mask) },
};

#define NUM_CURSORS	(sizeof(Cursortab) / sizeof(Cursortab[0]))

void
set_bm_cursor(wn, cno)
int wn, cno;
{
	bmcursor_t *bmc;

	if (cno < 0 || cno >= NUM_CURSORS)
		panic("sbc cno botch");
	bmc = Cursortab + cno;
	if (bmc->bmc_cid == 0)
		bmc->bmc_cid = wn_create_cursor(&bmc->bmc_cursor, &bmc->bmc_mask);
	wn_define_cursor(wn, bmc->bmc_cid);
}
