<html>
<head>
<title>Communication Protocol</title>
<LINK REL=stylesheet HREF="../jdoc.css" TYPE="text/css">
</head><body><!--top jump start--><a href="dde_examples.htm">&gt&gt;</a>&nbsp;
<a href="j_commands_events.htm">&lt&lt;</a>&nbsp;
<a href="../index/a.htm">Ndx</a>&nbsp;
<a href="../user/contents.htm">Usr</a>&nbsp;
<a href="../primer/contents.htm">Pri</a>&nbsp;
<a href="../phrases/contents.htm">Phr</a>&nbsp;
<a href="../dictionary/contents.htm">Dic</a>&nbsp;
<a href="../release/contents.htm">Rel</a>&nbsp;
<a href="../dictionary/vocabul.htm">Voc</a>&nbsp;
<a href="../dictionary/xmain.htm">!:</a>&nbsp;
<a href="../user/win_driver_cmd_ref_overview.htm">wd</a>&nbsp;
<a href="../index.htm">Help</a>&nbsp;
User<hr><!--top jump end-->




<TR valign="baseline"><TD><H1>Communications Protocol</h1>
<TR><TD colspan="2"> 


<p>
<i>Opening the conversation:</i><br>
The client always initiates the conversation by sending a message to the server. The 
server must be ready to respond. How the server does this depends on the application.

<p>
For J to act as a server, you must have first loaded J and set the service name, either 
from the command line or using the ddename command. You also need event handlers 
for the events you want to respond to.

<p>
<i>Client commands:</i><br>
The client can send four types of messages:
<p>
<li>a <i>ddepoke</i> message sends data to the server. The server does not respond. How the 
server treats this data depends on the application. If the server is a spreadsheet, the 
data may be written to the current worksheet; if the server is J, it may be treated as a 
sentence to be executed.<br><br>

<li>a <i>ddeex</i> message sends a command to the server. The server does not respond. 
How the server treats this depends on the application, but it would typically be used 
to invoke a macro command in the server. A J server does not have to recognise this 
message, since a ddepoke message can be used instead.<br><br>

<li>a <i>ddereq</i> message sends a request for a data item to the server. The server 
responds with the data item.<br><br>

<li>a <i>ddestart</i> message sets up an advise loop, asking the server to advise the client 
whenever a specific data item has changed. The <i>ddestop</i> message terminates the 
advise loop. Once an advise loop has been initiated, the client must be prepared to 
accept messages from the server at any time.
	
<p>
<i>Closing the conversation:</i><br>

A conversation is closed whenever either application terminates. A client can also close 
the conversation by issuing a <i>ddedis</i> command (received by Windows, but not sent to 
the server).

</TD>
  </tr>
<TR><TD>
<!--bottom jump start--><hr><a href="dde_examples.htm">&gt&gt;</a>&nbsp;
<a href="j_commands_events.htm">&lt&lt;</a>&nbsp;
<a href="../index/a.htm">Ndx</a>&nbsp;
<a href="../user/contents.htm">Usr</a>&nbsp;
<a href="../primer/contents.htm">Pri</a>&nbsp;
<a href="../phrases/contents.htm">Phr</a>&nbsp;
<a href="../dictionary/contents.htm">Dic</a>&nbsp;
<a href="../release/contents.htm">Rel</a>&nbsp;
<a href="../dictionary/vocabul.htm">Voc</a>&nbsp;
<a href="../dictionary/xmain.htm">!:</a>&nbsp;
<a href="../user/win_driver_cmd_ref_overview.htm">wd</a>&nbsp;
<a href="../index.htm">Help</a>&nbsp;
User<!--bottom jump end--></td></tr></table></body>
</html>
