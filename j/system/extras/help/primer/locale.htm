<html>
<head>
<title>Locale</title>
<LINK REL=stylesheet HREF="../jdoc.css" TYPE="text/css">
</head><body><!--top jump start--><a href="z_locale.htm">&gt&gt;</a>&nbsp;
<a href="when_not_same.htm">&lt&lt;</a>&nbsp;
<a href="../index/a.htm">Ndx</a>&nbsp;
<a href="../user/contents.htm">Usr</a>&nbsp;
<a href="../primer/contents.htm">Pri</a>&nbsp;
<a href="../phrases/contents.htm">Phr</a>&nbsp;
<a href="../dictionary/contents.htm">Dic</a>&nbsp;
<a href="../release/contents.htm">Rel</a>&nbsp;
<a href="../dictionary/vocabul.htm">Voc</a>&nbsp;
<a href="../dictionary/xmain.htm">!:</a>&nbsp;
<a href="../user/win_driver_cmd_ref_overview.htm">wd</a>&nbsp;
<a href="../index.htm">Help</a>&nbsp;
Primer<hr><!--top jump end-->


 


<TR valign="baseline"><TD><H1>Locale</h1><TR><TD>

<P>First of all, note that locale is a very different word from local, even though there is only one less letter in the latter.</P>

<P>A locale is a set of global names. There can be several locales, so there can be several sets of globals.</P>

<P>A global name in a locale is distinguished from the same name in other locales by qualifying the name with the addition of the locale name bracketed by <TT>_</TT> (underbar) characters. A name qualified by a locale is always a global name.</P>

<PRE>   abc_def_ =: 2</PRE>

<P>The above sentence can be read as global abc in locale <TT>def </TT>is <TT>2</TT>.
</P>
<PRE>   abc_base_ =: 4</PRE>

<P>The above sentence can be read as global <TT>abc </TT>in locale base is 4. 
</P>
<P>If the locale name is elided, it is assumed to be base. 
</P>
<PRE>   abc__   NB. the same as abc_base_
4
</PRE>
<P>If a global name is not qualified with a locale name, then it is in the current locale. The base locale is the current locale unless it has been explicitly changed by executing a verb in a different locale. The following defines <TT>abc </TT>in the base locale:</P>

<PRE>   abc =. 6
   abc_base_
6
   abc
6
</PRE>
<P>Since the base locale is the current locale, the names <TT>abc </TT>and <TT>abc_base_</TT> are the same.</P>

<P>The name <TT>abc_def_</TT> is clearly different from <TT>abc</TT>, but so far there is no way of telling that anything special is going on. In what sense are <TT>abc </TT>and <TT>foo </TT>in the same (base) locale? And <TT>abc </TT>and <TT>abc_def_</TT> in different locales?</P>

<P>One way of distinguishing is to use the names utility verb that lists global names.</P>

<PRE>   a =. 23
   b =. 24
   a_q_ =. 25
   w_q_ =. 26
 
   names 0	NB. 0 lists nouns
a abc b</PRE>

<P>Your names result may be different, but it will include all global nouns you have defined in the base locale. You should see the <TT>a</TT> and <TT>b</TT> that you defined above and note that you do not see the <TT>w</TT> that was defined in locale <TT>q</TT>.</P>

<P>To see the names defined in locale <TT>q</TT> you can do the following:
</P>
<PRE>   names_q_ 0	NB. names in locale q
a w</PRE>

<P>Nouns <TT>a</TT> and <TT>w</TT> are defined in the <TT>q</TT> locale.
</P>
<P>Locales partition global names into different sets, and utilities, such as names, can work with globals in a particular locale.</P>

<P>The real power of locales comes into play with verbs defined in a locale. When a verb executes in a locale it executes with that locale, not the base locale, as the current locale.</P>

<P>Let's define a simple verb in the <TT>q</TT> locale to see how this works.
</P>
<PRE>   f_q_ =. 3 : 'a =: y.'</PRE>

<P>This verb defines global a with its right argument. There can be many different locales, each with their own global <TT>a</TT>. But when <TT>f_q_</TT> executes, it executes in the <TT>q</TT> locale and the <TT>q</TT> locale is the current local, and global names it uses are from the <TT>q</TT> locale. Try the following experiments:</P>

<PRE>   a =. 23	NB. define a in the base locale
   a_q_ =. 24	NB. define a in locale q
   f_q_ 100	NB. execute f in locale q
100
   a
23
   a_q_
100
</PRE>
<P>Executing <TT>f_q_ 100</TT> defined global <TT>a_q_</TT> as 100. It did not affect the global<TT> a</TT> in the base locale.</P>

<P>If a verb explicitly references a name in a locale then that is the global that is affected. For example, define verb <TT>g_q_</TT> that defines a in the base locale. You will see that the <TT>a</TT> in the base locale is defined and the <TT>a</TT> in the <TT>q</TT> locale is not changed:</P>

<PRE>   g_q_ =. 3 : 'a_base_ =: y.'	NB. explicit locale name
   g_q_ 200
200
   a
200
   a__
200
   a_q_
100</PRE>

<P>Locales partition global names into separate sets. In particular, related nouns and verbs, say in a set of utilities, can be defined in their own locale. Their names don't conflict with names in the base or other locales. When you look at your application you can look at just the related globals that are in a particular locale. When a verb runs in a locale it uses globals from that same locale.</P>

<P>The names verb with an argument of 0 lists nouns, with 3 it lists verbs, and with 6 it lists locale names.</P>

<PRE>   names_q_ 0
a w

   names_q_ 3	NB. verbs
f g

   names 6	NB. locale names
base j q z
</PRE>
<P>The list of locale names is interesting. <TT>base </TT>and <TT>q</TT> you know about, but what about <TT>j</TT> and <TT>z</TT> ?</P>

<P>The globals in the <TT>j</TT> and <TT>z</TT> locales are defined when J starts up and runs the profile.ijs script. The j locale contains things which are useful in building an application and is discussed in the J Online Documentation.</P>

<P>The <TT>z</TT> locale is very interesting indeed.
</P>







</TD>
  </tr>
<TR><TD>
<!--bottom jump start--><hr><a href="z_locale.htm">&gt&gt;</a>&nbsp;
<a href="when_not_same.htm">&lt&lt;</a>&nbsp;
<a href="../index/a.htm">Ndx</a>&nbsp;
<a href="../user/contents.htm">Usr</a>&nbsp;
<a href="../primer/contents.htm">Pri</a>&nbsp;
<a href="../phrases/contents.htm">Phr</a>&nbsp;
<a href="../dictionary/contents.htm">Dic</a>&nbsp;
<a href="../release/contents.htm">Rel</a>&nbsp;
<a href="../dictionary/vocabul.htm">Voc</a>&nbsp;
<a href="../dictionary/xmain.htm">!:</a>&nbsp;
<a href="../user/win_driver_cmd_ref_overview.htm">wd</a>&nbsp;
<a href="../index.htm">Help</a>&nbsp;
Primer<!--bottom jump end--></td></tr></table></body>
</html>
