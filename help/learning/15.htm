<HTML>
<HEAD>
<TITLE>Ch 15: Tacit From Explicit</TITLE>

<STYLE TYPE="text/css">
<!--
TT  {font-size: 11pt; COLOR: BLUE}
PRE {font-size: 11pt; COLOR: BLUE}
-->
</STYLE>

</HEAD>

<BODY BGCOLOR=WHITE>

<table border="0" cellpadding="5" cellspacing="0"  width="100%">
 <tr> <td valign="top" width="17%"> <p> </td>
      <td valign="top" width="83%"> 
<H1>Chapter 15: Tacit From Explicit</H1>
<p>
In this chapter we look at how a tacit function 
can be generated from an explicit function. 
<p>
This chapter was written using J version 4.03a. 
<H2>15.1  Generated Tacit Verbs</H2>
<p>
Suppose that <TT>e</TT> is a verb, defined explicitly as follows: 
<PRE>
   e =: 3 : '(+/ y.) % # y.'
</PRE>
<p>
The right argument of the colon conjunction we can call the "body". 
Then a tacit verb, <TT>t</TT> say, equivalent to <TT>e</TT>, can be produced 
by writing <TT>13 : </TT> instead of <TT>3 :</TT> with the same body. 
<PRE>
   t =: 13 : '(+/ y.) % # y.'
</PRE>
<p>
<TABLE CELLPADDING=10 BORDER=1> 
<TR  VALIGN=TOP> 
<TD><TT> e </TT></TD> 
<TD><TT> t </TT></TD> 
<TD><TT>e 1 2 3</TT></TD> 
<TD><TT>t 1 2 3</TT></TD> 
<TR VALIGN=TOP> 
<TD><PRE>3 : '(+/ y.) % # y.'</TD> 
<TD><PRE>+/ % #</TD> 
<TD><PRE>2</TD> 
<TD><PRE>2</TD> 
</PRE></TABLE> 
<p>
Here now is an example of an explicit dyad. 
<PRE>
   ed =:  4 : 'y. % x.'
</PRE>
<p>
The equivalent tacit dyad can be generated by writing <TT>13 :</TT> 
rather than <TT>4 :</TT> with the same body. 
<PRE>
   td =: 13 : 'y. % x.'
</PRE>
<p>
<TABLE CELLPADDING=10 BORDER=1> 
<TR  VALIGN=TOP> 
<TD><TT>ed</TT></TD> 
<TD><TT>td</TT></TD> 
<TD><TT>2 ed 6</TT></TD> 
<TD><TT>2 td 6</TT></TD> 
<TR VALIGN=TOP> 
<TD><PRE>4 : 'y. % x.'</TD> 
<TD><PRE>] % [</TD> 
<TD><PRE>3</TD> 
<TD><PRE>3</TD> 
</PRE></TABLE> 
<p>
We can conclude that if we write <TT>13 : body</TT>,  
and <TT>body</TT> contains <TT>y.</TT> (but not <TT>x.</TT>) then the 
result is a tacit verb of which the monadic case is 
equivalent to <TT>3 : body</TT>.  On the other hand, 
if <TT>body</TT> contains both <TT>x.</TT> and <TT>y.</TT> then 
the result is a tacit verb of which the dyadic case 
is equivalent to <TT>4 : body</TT>.   
<p>
For the purpose of generating tacit functions, the body 
is restricted to being 
a single string or one line. 
<p>
Recall that with <TT>3 : body</TT>, 
the body is not evaluated when the definition 
is entered. However, with <TT>13 : body</TT>, then in effect 
the body is evaluated. For example: 
<p>
<TABLE CELLPADDING=10 BORDER=1> 
<TR  VALIGN=TOP> 
<TD><TT>k =: 99</TT></TD> 
<TD><TT>p =: 3 : 'y.+k'</TT></TD> 
<TD><TT>q =: 13 : 'y.+k'</TT></TD> 
<TD><TT>p 6</TT></TD> 
<TD><TT>q 6</TT></TD> 
<TR VALIGN=TOP> 
<TD><PRE>99</TD> 
<TD><PRE>3 : 'y.+k'</TD> 
<TD><PRE>] + 99"_</TD> 
<TD><PRE>105</TD> 
<TD><PRE>105</TD> 
</PRE></TABLE> 
<p>
We see that <TT>p</TT> is defined in terms of 
<TT>k</TT> while <TT>q</TT> is not. While <TT>p</TT> and <TT>q</TT> are at present 
equivalent, any subsequent change in the value of <TT>k</TT> 
will render them no longer equivalent. 
<p>
<TABLE CELLPADDING=10 BORDER=1> 
<TR  VALIGN=TOP> 
<TD><TT>k =: 0</TT></TD> 
<TD><TT>p 6</TT></TD> 
<TD><TT>q 6</TT></TD> 
<TR VALIGN=TOP> 
<TD><PRE>0</TD> 
<TD><PRE>6</TD> 
<TD><PRE>105</TD> 
</PRE></TABLE> 
<p>
A name with no assigned value is assumed to denote a verb. 
In the following example, note that <TT>f</TT> is unassigned, 
<TT>C</TT> is a predefined conjunction and <TT>g</TT> is a 
predefined verb. 
<PRE>
   C =: @:
   g =: %:
</PRE>
<p>
<TABLE CELLPADDING=10 BORDER=1> 
<TR  VALIGN=TOP> 
<TD><TT>foo =: 13 : '(f C f y.) , g y.'</TT></TD> 
<TD><TT>f =: *:</TT></TD> 
<TD><TT>foo 4</TT></TD> 
<TR VALIGN=TOP> 
<TD><PRE>f@:f , [: g ]</TD> 
<TD><PRE>*:</TD> 
<TD><PRE>256 2</TD> 
</PRE></TABLE> 
<H2>15.2  Generated Tacit Operators</H2>
<p>
Recall from  <A HREF="12.htm">Chapter 12</A> that an adverb 
may be defined explicitly with an expression of the form 
<TT>1 : body</TT>. Here is an example, an adverb <TT>R</TT> which applies its argument-verb 
separately to each row of a table. 
<p>
<TABLE CELLPADDING=10 BORDER=1> 
<TR  VALIGN=TOP> 
<TD><TT>R =: 1 : 'x. " 1'</TT></TD> 
<TD><TT>&lt;  R</TT></TD> 
<TR VALIGN=TOP> 
<TD><PRE>1 : 'x. " 1'</TD> 
<TD><PRE>&lt;"1</TD> 
</PRE></TABLE> 
<p>
A tacit adverb, <TT>T</TT> say, equivalent to <TT>R</TT> 
can be generated by writing <TT>11 : </TT> rather than 
<TT>1 :</TT> with the same body. 
<p>
<TABLE CELLPADDING=10 BORDER=1> 
<TR  VALIGN=TOP> 
<TD><TT>T =: 11 : 'x. " 1'</TT></TD> 
<TD><TT>&lt; T</TT></TD> 
<TR VALIGN=TOP> 
<TD><PRE>"1</TD> 
<TD><PRE>&lt;"1</TD> 
</PRE></TABLE> 
<p>
Recall from  <A HREF="14.htm">Chapter 14</A> the problem 
of writing a conjunction to 
generate a hook in the form <TT>((x C y) V)</TT>. Here 
<TT>C</TT> and <TT>V</TT> are to be fixed in advance, and <TT>x</TT> and <TT>y</TT>  
are to be verbs given as arguments to the conjunction. 
<p>
An explicit version of such a conjunction, <TT>EC</TT> say, could be:  
<p>
<TABLE CELLPADDING=10 BORDER=1> 
<TR  VALIGN=TOP> 
<TD><TT>EC  =: 2 : 'x. @: y.  +'</TT></TD> 
<TD><TT>f EC g</TT></TD> 
<TR VALIGN=TOP> 
<TD><PRE>2 : 'x. @: y.  +'</TD> 
<TD><PRE>f@:g +</TD> 
</PRE></TABLE> 
<p>
An equivalent tacit version could be produced by  
writing <TT>12 :</TT> instead of <TT>2 :</TT>, thus: 
<p>
<TABLE CELLPADDING=10 BORDER=1> 
<TR  VALIGN=TOP> 
<TD><TT>TC =: 12 : 'x. @: y. +'</TT></TD> 
<TD><TT>f TC g</TT></TD> 
<TR VALIGN=TOP> 
<TD><PRE>@: (`+) (`:6)</TD> 
<TD><PRE>f@:g +</TD> 
</PRE></TABLE> 
<p>
The tacit conjunction 
<TT>TC</TT> is of the form: conjunction, adverb, adverb, that is, 
a trident of the pattern CAA. What <TT>12 :</TT> has done for us 
is to generate an instance of trident CAA.. 
<p>
This brings us to the end of Chapter 15. 
  </tr> </table>

<HR> 
<p ALIGN=LEFT>
<A HREF="16.htm"> NEXT </A> <BR>
<A HREF="book.htm#toc"> Table of Contents </A>
</p> 

<HR>
<p ALIGN=CENTER> <FONT SIZE=-2>Copyright &copy; Roger Stokes 2000. 
This material may be freely reproduced,
provided that this copyright notice and provision is also reproduced.
</p>
 
<p ALIGN=CENTER> last updated 26Feb00</p>
</BODY>
</HTML>

